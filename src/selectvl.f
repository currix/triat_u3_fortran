      SUBROUTINE SLCTLU3(L,LD,EXPAS,VEXPAS,EXPEN,EXPERR,
     *     LXPOIN,VEXPEN,VEXPERR,NDAT)
C     
C     
C     SUBROUTINE THAT SELECTS THE EXPERIMENTAL DATA FOR 
C     VIBRATIONAL ANGULAR MOMENTUM L AMONG EXPERIMENTAL 
C     ENERGIES, ERRORS AND ASSIGNMENTS IN THE SU(3) MODEL.
C     
C     INPUT
C     L      : VIBRATIONAL ANGULAR MOMENTUM
C     LD     : LEADING DIMENSION OF MATRICES
C     EXPAS  : MATRIX WITH ALL EXPERIMENTAL ASSIGNMENTS FORMAT:(V L)
C     EXPEN  : VECTOR WITH ALL EXPERIMENTAL ENERGIES
C     EXPERR : VECTOR WITH ALL EXPERIMENTAL ENERGY ERRORS
C     LXPOIN : POINTER TO LOCATE THE DIFFERENT VALUES OF L
C
C     OUTPUT
C     NDAT   : NUMBER OF EXPERIMENTAL DATA FOR POLYAD (V,L)
C     VEXPAS : EXPERIMENTAL ASSIGNMENTS FOR POLYAD (V,L) FORMAT:(V1 V V2)
C     VEXPEN : EXPERIMENTAL ENERGIES FOR POLYAD (V,L)
C     VEXPERR: EXPERIMENTAL ERRORS FOR POLYAD (V,L)
C
C     21-01-01                     by Currix TM
C     
      IMPLICIT NONE
C
C     DEFINITION OF VARIABLES
C     
      INTEGER L, LD, EXPAS(LD,*), LXPOIN(0:*)
      DOUBLE PRECISION EXPEN(*), EXPERR(*)
C     
      DOUBLE PRECISION VEXPEN(*), VEXPERR(*)
      INTEGER VEXPAS(LD,*), NDAT
C     
      INTEGER IPRINT
C     
C     CONTROL OUTPUT DISPLAYED
      COMMON/GRAF/ IPRINT
C     
C     TEMPORAL VARIABLES                                     
      INTEGER I, J, INDX, NTOT
C     
C     
      IF (IPRINT.GT.2) WRITE(*,*) 'SUBROUTINE SELECT VL'
C     
      NDAT = 0
C     
C     
C     NUMBER OF EXPERIMENTAL DATA
      NTOT = LXPOIN(L+1) - LXPOIN(L)
C
      INDX = LXPOIN(L)
      DO I = 1, NTOT
         IF (EXPAS(INDX+I,2).EQ.L) THEN
            NDAT = NDAT+1
            VEXPEN(NDAT) = EXPEN(INDX+I)
            VEXPERR(NDAT) = EXPERR(INDX+I)
            DO J = 1, 2
               VEXPAS(NDAT,J) = EXPAS(INDX+I,J)
            ENDDO
         ENDIF
      ENDDO
C     
C
      IF (IPRINT.GT.2) THEN
         WRITE(*,*)
         WRITE(*,*) 'EXPERIMENTAL ENERGIES FOR L =',L
         WRITE(*,*)
         WRITE(*,*) 'NDAT', NDAT
         DO I = 1, NDAT
            WRITE(*,*)(VEXPAS(I,J),J=1,2),
     *           VEXPEN(I), VEXPERR(I)
         ENDDO
         WRITE(*,*)
      ENDIF
C
C     
      RETURN 
      END
      








