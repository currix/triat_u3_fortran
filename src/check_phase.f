      SUBROUTINE CHECK_PHASE(N2, L, LD, W2MAT, IPRINT)
C     
C     SUBROUTINE THAT CHECK IF THE PHASE OF THE TRANSFORMATION BRACKETS MATRIX
C     BETWEEN THE U(2) AND SO(3) BASIS IS CORRECT AND ADOPT THE CRITERIUM  
C     PUBLISHED IN
C
C     INPUT
C     N2     : U(3) IRREP LABEL (BENDING)
C     L      : VIBRATIONAL ANGULAR MOMENTUM LABEL
C     LD     : LEADING DIMENSION OF W2MAT
C     AVECU2 : W^2 EIGENVECTORS IN THE U(2) BASIS
C     IPRINT : CONTROL VERBOSITY. DEBUGGING PURPOSES
C
C     OUTPUT
C     AVECU2 : TRANSFORMATION BRACKET MATRIX (CORRECT PHASE) 
C     
C
C     by Currix TM
C
      IMPLICIT NONE
C     DEFINITION OF PARAMETERS
C     TOLERANCE
      DOUBLE PRECISION TOLERANCE
      PARAMETER (TOLERANCE = 1.0D-10) 
C
      INTEGER N2, L, LD, IPRINT
C
      DOUBLE PRECISION W2MAT(LD,*)
C
C     PHASE CORRECTION OF TRANSFORMATION BRACKET
      INTEGER PHASE_TB
      EXTERNAL PHASE_TB
C
C     LOCAL VARIABLES
      INTEGER I, J, DIM, PHASE
C
C
      IF (IPRINT.GT.1) WRITE(*,*) 'SUBROUTINE CHECK_PHASE STARTS HERE'
C
C     BLOCK DIMENSION
      DIM = (N2-MOD(N2-L,2)-L)/2 + 1
C
C     CHECK PHASE
C
      PHASE = PHASE_TB(N2,L)
C
      IF (IPRINT.GT.2) WRITE(*,*) "PHASE(",N2,",",L,") = ",PHASE
C
      DO I = 1, DIM
C
         IF (ABS(W2MAT(1,I)).LT.TOLERANCE .AND. IPRINT .GT. 0) THEN
            WRITE(*,*) 'WARNING: ',I,
     *           '-TH EIGENVECTOR COMPONENT < TOLERANCE'
         ELSE
            IF (IPRINT.GT.2) 
     *           WRITE(*,*) PHASE,W2MAT(1,I),SIGN(1.0D0,W2MAT(1,I))
            IF (PHASE.NE.SIGN(1.0D0,W2MAT(1,I))) THEN
               DO J = 1, DIM
                  W2MAT(J,I) = DFLOAT(-1)*W2MAT(J,I)
               ENDDO
            ENDIF
         ENDIF
      ENDDO
C     
      IF (IPRINT.GT.1) WRITE(*,*) 'SUBROUTINE CHECK_PHASE ENDS HERE'
C
      RETURN  
C     
      END
C
      INTEGER FUNCTION PHASE_TB(N,L)
C
C     TRANSFORMATION BRACKET PHASE CONVENTION (PRA 77 032115)
C
C     THIS PHASE CORRESPOND TO THE SIGN OF THE TRANSFORMATION
C     BRACKET MATRIX ELEMENT < [N] n_MAX L | [N] w L >
C     
      IMPLICIT NONE
C
      INTEGER N
      INTEGER L
C
      IF (MOD(N-L,2).EQ.0) THEN
         PHASE_TB = (-1)**((N-2*L+MOD(L,2))/2)
      ELSE
         PHASE_TB = (-1)**((N-2*L+MOD(L,2)-1)/2)
      ENDIF
C
      RETURN
C
      END
